generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User(utente che accede)
// ============================================================================

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  RefreshTokens RefreshTokens[]
  PasswordReset PasswordReset[]
}

model RefreshTokens {
  userId    Int      @id
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  updatedAt DateTime @updatedAt
}

model PasswordReset {
  userId    Int      @id
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @updatedAt
}

// Agency  // tabella da rivedere
// ============================================================================

model Agency {
  id          Int      @id @default(autoincrement())
  companyName String
  email       String   @unique
  phone       String?
  address     String?
  logo        String // url Logo
  pIva        String   @unique
  createdAt   DateTime @default(now()) 
  updatedAt   DateTime @updatedAt
  clients     Client[]

}

// Client  // tabella da rivedere
// ============================================================================

model Client {
  id          Int       @id @default(autoincrement())
  type        Type
  name        String?
  surname     String?
  companyName String
  pIva        String    @unique
  address     String    @unique
  fiscalCode  String?
  email       String
  phone       String?
  pec         String?
  sdi         String?
  agency      Agency    @relation(fields: [agencyId], references: [id])
  agencyId    Int
  services    Service[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

}

enum Type {
  Company
  Holder
}

// Service // tabella da rivedere
// ============================================================================

model Service {
  id                Int         @id @default(autoincrement())
  name              String
  typeService       TypeService
  category          Category    @relation(fields: [categoryId], references: [id])
  categoryId        Int
  costService       Float
  costServiceMarkup Float
  prymaryService    Service?    @relation("primaryServcice", fields: [primaryServiceId], references: [id])
  primaryServiceId  Int?
  state             State
  client            Client      @relation(fields: [clientId], references: [id])
  clientId          Int
  dateExpiry        DateTime?
  autorenewDate     DateTime?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  Service           Service[]   @relation("primaryServcice")

}

enum State {
  active
  disable

}

enum TypeService {
  primary
  secondary

}

// Category  
// ============================================================================

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Service   Service[]

}

// Tabella per id shellrent
// ============================================================================

model ServiceShId {
  id        Int @id @default(autoincrement())
  ServiceId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model DomainShId {
//   id       Int @id @default(autoincrement())
//   DomainId Int

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model CertificateShId {
//   id            Int @id @default(autoincrement())
//   CertificateId Int

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model WebHostingShId {
//   id           Int @id @default(autoincrement())
//   WebHostingId Int

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model ServerShId {
//   id       Int @id @default(autoincrement())
//   ServerId Int

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model ServerVmShId {
//   id         Int @id @default(autoincrement())
//   ServerVmId Int

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
